

services:
  # PostgreSQL Database
  database:
    image: postgres:15
    container_name: bigshot_database
    environment:
      POSTGRES_DB: bigshot
      POSTGRES_USER: bigshot
      POSTGRES_PASSWORD: bigshot_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgresql_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bigshot -d bigshot"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Redis Cache and Message Broker
  redis:
    image: redis:7-alpine
    container_name: bigshot_redis
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Flask Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bigshot_backend
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://bigshot:bigshot_password@database:5432/bigshot
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - JWT_SECRET_KEY=your-secret-key-change-in-production
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=bigshot
      - POSTGRES_PASSWORD=bigshot_password
      - POSTGRES_DB=bigshot
      - SERVICE_NAME=bigshot-backend
      - HOSTNAME=bigshot_backend
    ports:
      - "127.0.0.1:5000:5000"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./instance:/app/instance
      - ./logs:/app/logs
      - ./scripts/container_diagnostics.sh:/usr/local/bin/container_diagnostics.sh:ro
    restart: unless-stopped

  # Celery Worker
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bigshot_celery
    entrypoint: ["./scripts/docker-entrypoint.sh"]
    command: python -m celery -A celery_app.celery_app worker --loglevel=info --concurrency=4
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://bigshot:bigshot_password@database:5432/bigshot
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=bigshot
      - POSTGRES_PASSWORD=bigshot_password
      - POSTGRES_DB=bigshot
      - SERVICE_NAME=bigshot-celery
      - HOSTNAME=bigshot_celery
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./instance:/app/instance
      - ./logs:/app/logs
      - ./scripts/container_diagnostics.sh:/usr/local/bin/container_diagnostics.sh:ro
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bigshot_frontend
    environment:
      - VITE_API_URL=""
      - WEB_PORT=80
    ports:
      - "127.0.0.1:80:80"
    depends_on:
      - backend
    volumes:
      - ./scripts/container_diagnostics.sh:/usr/local/bin/container_diagnostics.sh:ro
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: bigshot_network