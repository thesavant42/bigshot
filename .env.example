# Database Configuration
POSTGRES_DB=bigshot
POSTGRES_USER=bigshot
POSTGRES_PASSWORD=your_secure_password_here
POSTGRES_HOST=127.0.0.1
POSTGRES_PORT=5432
DATABASE_URL=postgresql://bigshot:your_secure_password_here@127.0.0.1:5432/bigshot
# Redis Configuration
REDIS_HOST=127.0.0.1
REDIS_PORT=6379
REDIS_URL=redis://127.0.0.1:6379/0

# Application Configuration
SECRET_KEY=your_secret_key_here_at_least_16_chars
JWT_SECRET_KEY=your_jwt_secret_key_here
TEST_USERNAME=admin
TEST_PASSWORD=password

# LLM Provider Configuration
# Choose 'openai' or 'lmstudio'
#LLM_PROVIDER=openai
LLM_PROVIDER=lmstudio

# Enable mock mode to provide fallback responses when LLM is unavailable
# Set to 'true' to enable mock responses, 'false' (default) to return proper errors
LLM_MOCK_MODE=false

# OpenAI Configuration (when LLM_PROVIDER=openai)
OPENAI_API_KEY=your_openai_api_key_here
# OPENAI_API_BASE=https://api.openai.com/v1  # Optional, defaults to OpenAI
# OPENAI_MODEL=gpt-3.5-turbo  # Optional, defaults to gpt-3.5-turbo

# LMStudio Configuration (when LLM_PROVIDER=lmstudio)
LMSTUDIO_API_BASE='http://192.168.1.98:1234'  # Defaults to http://192.168.1.98:1234
LMSTUDIO_API_KEY='lm-studio-apikey'  
LMSTUDIO_MODEL='qwen/qwen3-8b'  # Optional, defaults to 'model-identifier'

# Service Configuration
WEB_PORT=8080
BACKEND_HOST=127.0.0.1
BACKEND_PORT=5000

# Monitoring Configuration
GRAFANA_PASSWORD=your_grafana_password_here

# SSL Configuration (if using HTTPS)
# SSL_CERT_PATH=/path/to/ssl/cert
# SSL_KEY_PATH=/path/to/ssl/key

# Debugging and Logging
FLASK_ENV=development
LOG_LEVEL=DEBUG

# Enhanced Observability Configuration
# Set log output format: 'text' (default) or 'json' for structured logging
LOG_FORMAT=text

# Enable zone-based debug logging for specific components
# Available zones: env, docker, auth, api, llm, jobs, connectivity, startup, export, all
# Use comma-separated list: DEBUG_ZONE=env,docker,auth
DEBUG_ZONE=env,docker

# Examples:
# DEBUG_ZONE=env              # Debug environment variable handling
# DEBUG_ZONE=docker           # Debug Docker container context
# DEBUG_ZONE=auth,api         # Debug authentication and API requests
# DEBUG_ZONE=all              # Enable all debug zones (verbose!)